/* 
*Copyright (c) 2019-2021, Alibaba Group Holding Limited;
*Licensed under the Apache License, Version 2.0 (the "License");
*you may not use this file except in compliance with the License.
*You may obtain a copy of the License at

*   http://www.apache.org/licenses/LICENSE-2.0

*Unless required by applicable law or agreed to in writing, software
*distributed under the License is distributed on an "AS IS" BASIS,
*WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*See the License for the specific language governing permissions and
*limitations under the License.
 */


// Code generated by MockGen. DO NOT EDIT.
// Source: ./business/domain/i_class_query.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "gitlab.alibaba-inc.com/polar-as/polar-common-domain/business/domain"
)

// MockIClassQuery is a mock of IClassQuery interface.
type MockIClassQuery struct {
	ctrl     *gomock.Controller
	recorder *MockIClassQueryMockRecorder
}

// MockIClassQueryMockRecorder is the mock recorder for MockIClassQuery.
type MockIClassQueryMockRecorder struct {
	mock *MockIClassQuery
}

// NewMockIClassQuery creates a new mock instance.
func NewMockIClassQuery(ctrl *gomock.Controller) *MockIClassQuery {
	mock := &MockIClassQuery{ctrl: ctrl}
	mock.recorder = &MockIClassQueryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIClassQuery) EXPECT() *MockIClassQueryMockRecorder {
	return m.recorder
}

// GetClasses mocks base method.
func (m *MockIClassQuery) GetClasses(engineType domain.EngineType, classKey string) ([]*domain.EngineClass, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClasses", engineType, classKey)
	ret0, _ := ret[0].([]*domain.EngineClass)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetClasses indicates an expected call of GetClasses.
func (mr *MockIClassQueryMockRecorder) GetClasses(engineType, classKey interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClasses", reflect.TypeOf((*MockIClassQuery)(nil).GetClasses), engineType, classKey)
}
