/* 
*Copyright (c) 2019-2021, Alibaba Group Holding Limited;
*Licensed under the Apache License, Version 2.0 (the "License");
*you may not use this file except in compliance with the License.
*You may obtain a copy of the License at

*   http://www.apache.org/licenses/LICENSE-2.0

*Unless required by applicable law or agreed to in writing, software
*distributed under the License is distributed on an "AS IS" BASIS,
*WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*See the License for the specific language governing permissions and
*limitations under the License.
 */


// Code generated by MockGen. DO NOT EDIT.
// Source: ./business/domain/i_engine_params_template_query.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "gitlab.alibaba-inc.com/polar-as/polar-common-domain/business/domain"
)

// MockIEngineParamsTemplateQuery is a mock of IEngineParamsTemplateQuery interface.
type MockIEngineParamsTemplateQuery struct {
	ctrl     *gomock.Controller
	recorder *MockIEngineParamsTemplateQueryMockRecorder
}

// MockIEngineParamsTemplateQueryMockRecorder is the mock recorder for MockIEngineParamsTemplateQuery.
type MockIEngineParamsTemplateQueryMockRecorder struct {
	mock *MockIEngineParamsTemplateQuery
}

// NewMockIEngineParamsTemplateQuery creates a new mock instance.
func NewMockIEngineParamsTemplateQuery(ctrl *gomock.Controller) *MockIEngineParamsTemplateQuery {
	mock := &MockIEngineParamsTemplateQuery{ctrl: ctrl}
	mock.recorder = &MockIEngineParamsTemplateQueryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIEngineParamsTemplateQuery) EXPECT() *MockIEngineParamsTemplateQueryMockRecorder {
	return m.recorder
}

// GetTemplateParams mocks base method.
func (m *MockIEngineParamsTemplateQuery) GetTemplateParams(engineType domain.EngineType) ([]*domain.ParamTemplateItem, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTemplateParams", engineType)
	ret0, _ := ret[0].([]*domain.ParamTemplateItem)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTemplateParams indicates an expected call of GetTemplateParams.
func (mr *MockIEngineParamsTemplateQueryMockRecorder) GetTemplateParams(engineType interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTemplateParams", reflect.TypeOf((*MockIEngineParamsTemplateQuery)(nil).GetTemplateParams), engineType)
}
