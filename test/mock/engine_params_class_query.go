/*
*Copyright (c) 2019-2021, Alibaba Group Holding Limited;
*Licensed under the Apache License, Version 2.0 (the "License");
*you may not use this file except in compliance with the License.
*You may obtain a copy of the License at

*   http://www.apache.org/licenses/LICENSE-2.0

*Unless required by applicable law or agreed to in writing, software
*distributed under the License is distributed on an "AS IS" BASIS,
*WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*See the License for the specific language governing permissions and
*limitations under the License.
 */

// Code generated by MockGen. DO NOT EDIT.
// Source: ./business/domain/i_engine_params_class_query.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	domain "github.com/ApsaraDB/PolarDB-Stack-Common/business/domain"
	gomock "github.com/golang/mock/gomock"
)

// MockIEngineParamsClassQuery is a mock of IEngineParamsClassQuery interface.
type MockIEngineParamsClassQuery struct {
	ctrl     *gomock.Controller
	recorder *MockIEngineParamsClassQueryMockRecorder
}

// MockIEngineParamsClassQueryMockRecorder is the mock recorder for MockIEngineParamsClassQuery.
type MockIEngineParamsClassQueryMockRecorder struct {
	mock *MockIEngineParamsClassQuery
}

// NewMockIEngineParamsClassQuery creates a new mock instance.
func NewMockIEngineParamsClassQuery(ctrl *gomock.Controller) *MockIEngineParamsClassQuery {
	mock := &MockIEngineParamsClassQuery{ctrl: ctrl}
	mock.recorder = &MockIEngineParamsClassQueryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIEngineParamsClassQuery) EXPECT() *MockIEngineParamsClassQueryMockRecorder {
	return m.recorder
}

// GetClassParams mocks base method.
func (m *MockIEngineParamsClassQuery) GetClassParams(engineType domain.EngineType, classKey string) (map[string]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClassParams", engineType, classKey)
	ret0, _ := ret[0].(map[string]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetClassParams indicates an expected call of GetClassParams.
func (mr *MockIEngineParamsClassQueryMockRecorder) GetClassParams(engineType, classKey interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClassParams", reflect.TypeOf((*MockIEngineParamsClassQuery)(nil).GetClassParams), engineType, classKey)
}
